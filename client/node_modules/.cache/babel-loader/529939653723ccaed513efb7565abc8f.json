{"ast":null,"code":"import _classCallCheck from \"/Users/evanscarr/Desktop/code/Projects/demo-day/memelash-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evanscarr/Desktop/code/Projects/demo-day/memelash-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evanscarr/Desktop/code/Projects/demo-day/memelash-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evanscarr/Desktop/code/Projects/demo-day/memelash-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evanscarr/Desktop/code/Projects/demo-day/memelash-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/evanscarr/Desktop/code/Projects/demo-day/memelash-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/evanscarr/Desktop/code/Projects/demo-day/memelash-app/client/src/components/PlayButton.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from 'socket.io-client';\n\nvar PlayButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayButton, _Component);\n\n  function PlayButton(props) {\n    var _this;\n\n    _classCallCheck(this, PlayButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayButton).call(this, props));\n\n    _this.play = function (event) {\n      _this.setMemeImg(); // const socket = socketIOClient(this.state.endpoint);\n      // socket.emit('display image', this.state.memeSrc)\n\n\n      _this.sendImage();\n\n      _this.setState({\n        startSess: true\n      });\n\n      console.log(\"Lets play\");\n      console.log(_this.state);\n    };\n\n    _this.sendColor = function () {\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.emit('change color', _this.state.color);\n    };\n\n    _this.setColor = function (color) {\n      _this.setState({\n        color: color\n      });\n    };\n\n    _this.sendImage = function () {\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.emit('display image', _this.state.memeSrc);\n    };\n\n    _this.setMemeImg = function (event) {\n      _this.setState({\n        memeSrc: \"https://imageresizer.static9.net.au/qifWHWByMwnsA068tqYbnw_nFz8=/396x0/http%3A%2F%2Fprod.static9.net.au%2F_%2Fmedia%2F2017%2F05%2F24%2F13%2F27%2FChloe-meme-imgflip.jpg\"\n      });\n    };\n\n    _this.sendComment = function () {\n      var socket = socketIOClient(_this.state.endpoint);\n      socket.emit('display comment', _this.state.value);\n    };\n\n    _this.play = _this.play.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      logged_in: props.logged_in,\n      username: props.username,\n      userId: props.userId,\n      startSess: false,\n      memeSrc: \"\",\n      commentSub: false,\n      value: \"\",\n      commentNum: 0,\n      endpoint: \"http://localhost:3001\",\n      color: 'white'\n    };\n    return _this;\n  }\n\n  _createClass(PlayButton, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n      var comment = this.state.value;\n      var commentL = comment.length + 1;\n      this.setState({\n        commentNum: commentL\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      // alert('A name was submitted: ' + this.state.value);\n      var comment = this.state.value;\n      this.setState({\n        commentSub: true\n      });\n      console.log(comment);\n      console.log(this.state);\n      console.log(this.state.commentNum);\n      this.sendComment(comment);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var socket = socketIOClient(this.state.endpoint);\n      socket.on('change color', function (col) {\n        document.body.style.backgroundColor = col;\n      });\n      return React.createElement(\"div\", {\n        className: \"playButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.startSess === false && React.createElement(\"button\", {\n        onClick: this.play,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"play\"), this.state.startSess === true && React.createElement(\"div\", {\n        className: \"gameSess\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"sample\",\n        src: this.state.memeSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"comment\",\n        id: \"text-area\",\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), this.state.commentNum > 180 && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Too long. Make it \", this.state.commentNum - 180, \" characters shorter. \"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.sendColor();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Change Color\"), React.createElement(\"button\", {\n        id: \"blue\",\n        onClick: function onClick() {\n          return _this2.setColor('blue');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Blue\"), React.createElement(\"button\", {\n        id: \"red\",\n        onClick: function onClick() {\n          return _this2.setColor('red');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Red\")));\n    }\n  }]);\n\n  return PlayButton;\n}(Component);\n\nexport default PlayButton; // socket.on('display comment', (com) => {\n//     var x = document.createElement(\"P\");                        \n//     var t = document.createTextNode(\"This is a paragraph.\");    \n//     x.appendChild(t);                                          \n//     document.body.appendChild(x); \n// })\n// socket.on(\"display comment\", (string) => {\n//     return fetch(`http://localhost:3001/games/update/${currentGame}`, {\n//         method: 'POST',\n//         headers: {\n//           'Accept': 'application/json',\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({string})\n//       }).then(res => res.json())\n// })\n\n{\n  /* <div style={{ textAlign: \"center\" }}>\n             <button onClick={() => this.send() }>Change Color</button>\n             <button id=\"blue\" onClick={() => this.setColor('blue')}>Blue</button>\n             <button id=\"red\" onClick={() => this.setColor('red')}>Red</button>\n         </div> */\n}","map":{"version":3,"sources":["/Users/evanscarr/Desktop/code/Projects/demo-day/memelash-app/client/src/components/PlayButton.js"],"names":["React","Component","socketIOClient","PlayButton","props","play","event","setMemeImg","sendImage","setState","startSess","console","log","state","sendColor","socket","endpoint","emit","color","setColor","memeSrc","sendComment","value","bind","handleChange","handleSubmit","logged_in","username","userId","commentSub","commentNum","target","comment","commentL","length","preventDefault","on","col","document","body","style","backgroundColor"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport socketIOClient from 'socket.io-client'\n\nclass PlayButton extends Component {\n    constructor(props) {\n        super(props);\n        this.play = this.play.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            logged_in: props.logged_in,\n            username: props.username,\n            userId: props.userId,\n            startSess: false,\n            memeSrc: \"\",\n            commentSub: false,\n            value:\"\",\n            commentNum: 0,\n            endpoint: \"http://localhost:3001\",\n            color: 'white'\n        }\n    }\n\n    \n\n    play = event => {\n        this.setMemeImg();\n        // const socket = socketIOClient(this.state.endpoint);\n        // socket.emit('display image', this.state.memeSrc)\n        this.sendImage();\n        this.setState({startSess: true})\n        console.log(\"Lets play\")\n        console.log(this.state)\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n        var comment = this.state.value;\n        var commentL = comment.length + 1;\n        this.setState({commentNum: commentL})\n    }\n    \n    handleSubmit(event) {\n        // alert('A name was submitted: ' + this.state.value);\n        var comment = this.state.value;\n        this.setState({commentSub: true});\n        console.log(comment);\n        console.log(this.state)\n        console.log(this.state.commentNum)\n\n        this.sendComment(comment);\n\n        event.preventDefault();\n    }\n\n    sendColor = () => {\n        const socket = socketIOClient(this.state.endpoint);\n        socket.emit('change color', this.state.color)\n    }\n    setColor = (color) => {\n        this.setState({ color })\n    }\n\n\n    sendImage = () => {\n        const socket = socketIOClient(this.state.endpoint);\n        socket.emit('display image', this.state.memeSrc);\n    }\n    setMemeImg = event => {\n        this.setState({memeSrc: \"https://imageresizer.static9.net.au/qifWHWByMwnsA068tqYbnw_nFz8=/396x0/http%3A%2F%2Fprod.static9.net.au%2F_%2Fmedia%2F2017%2F05%2F24%2F13%2F27%2FChloe-meme-imgflip.jpg\"})\n    }\n\n    sendComment = () => {\n        const socket = socketIOClient(this.state.endpoint);\n        socket.emit('display comment', this.state.value)\n    }\n\n    render() {\n        const socket = socketIOClient(this.state.endpoint);\n        socket.on('change color', (col) => {\n            document.body.style.backgroundColor = col\n        })\n\n        return (\n            <div className=\"playButton\">\n                {this.state.startSess === false && (\n                    <button\n                        onClick={this.play}\n                    >\n                    play\n                    </button>\n                )}\n                {this.state.startSess === true && (\n                    <div className=\"gameSess\">\n                        <img alt=\"sample\" src={this.state.memeSrc} ></img>\n                        <form onSubmit={this.handleSubmit}>\n\n                            <textarea name=\"comment\" id=\"text-area\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                            <input type=\"submit\"  value=\"Submit\" />\n\n                            {this.state.commentNum > 180 && \n                                <p>Too long. Make it {this.state.commentNum - 180} characters shorter. </p>\n                            }\n                        </form>\n                    </div>\n                )}\n                <div>\n                    <button onClick={() => this.sendColor() }>Change Color</button>\n                    <button id=\"blue\" onClick={() => this.setColor('blue')}>Blue</button>\n                    <button id=\"red\" onClick={() => this.setColor('red')}>Red</button>\n                </div>\n            </div>  \n        )\n    }\n}\n\nexport default PlayButton;\n\n        // socket.on('display comment', (com) => {\n        //     var x = document.createElement(\"P\");                        \n        //     var t = document.createTextNode(\"This is a paragraph.\");    \n        //     x.appendChild(t);                                          \n        //     document.body.appendChild(x); \n        // })\n        // socket.on(\"display comment\", (string) => {\n        //     return fetch(`http://localhost:3001/games/update/${currentGame}`, {\n        //         method: 'POST',\n        //         headers: {\n        //           'Accept': 'application/json',\n        //           'Content-Type': 'application/json'\n        //         },\n        //         body: JSON.stringify({string})\n        //       }).then(res => res.json())\n        // })\n\n        {/* <div style={{ textAlign: \"center\" }}>\n                    <button onClick={() => this.send() }>Change Color</button>\n                    <button id=\"blue\" onClick={() => this.setColor('blue')}>Blue</button>\n                    <button id=\"red\" onClick={() => this.setColor('red')}>Red</button>\n                </div> */}"]},"metadata":{},"sourceType":"module"}